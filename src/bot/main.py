import asyncio

from aiogram import Bot, Dispatcher
from aiogram.fsm.storage.redis import RedisStorage
from dishka.integrations.aiogram import setup_dishka
from redis.asyncio import Redis

from bot.application.handlers.base import setup_handlers
from bot.application.services.long_poll import YandexDiskPollingService
from bot.common.logs import logger
from bot.core.di import create_container


async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")

    # –°–æ–∑–¥–∞–µ–º DI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    container = await create_container()

    try:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        bot = await container.get(Bot)
        redis = await container.get(Redis)

        storage = RedisStorage(redis=redis)
        dp = Dispatcher(storage=storage)

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º dishka –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–Ω–µ–¥—Ä–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ handlers
        setup_dishka(container, dp)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        setup_handlers(dp)
        logger.info("‚úÖ Handlers –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")

        # –ó–∞–ø—É—Å–∫–∞–µ–º long-poll —Å–µ—Ä–≤–∏—Å
        polling_service = await container.get(YandexDiskPollingService)
        await polling_service.start()
        logger.info("‚úÖ Long-polling —Å–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω")

        logger.info("‚úÖ –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")

        try:
            await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
        finally:
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º long-polling –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
            await polling_service.stop()
    finally:
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        await container.close()
        logger.info("üëã –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")


def run():
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("üëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏. –ó–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞...")


if __name__ == "__main__":
    run()
